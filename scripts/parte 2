import pandas as pd
import matplotlib as mpl
import matplotlib.pyplot as plt
import numpy as np
from pathlib import Path
import pingouin as pg
from lets_plot import *

LetsPlot.setup_html(no_js=True)

#importamos archivo csv
url = "https://raw.githubusercontent.com/nataliarodriguezfr/Taller-3/9f4d8aea5f1dc38cdab50e644f0316559f34d1a9/data/raw_data/tablas_temperatura.csv"

df = pd.read_csv(url, skiprows=1, na_values="***")  # Ajusta skiprows según el contenido

df = df.set_index("Year") #Pone los años como indices 

#Tablas de frecuencia
df["Periodo"] = pd.cut( #Clasifica valores numericos en intervalos
    df.index,
    bins=[1950, 1980, 2010],  #Define los valores que se van a incluir o bien, los intervalos
    labels=["1951-1980", "1981-2010"], #pone nombre a los intervalos
    right=True
)
anual = (
    df[["J-D", "Periodo"]] #Lo que vamos a conservar del dataframe inicial
    .dropna() #Todo lo que no este incluido lo elimina
    .rename(columns={"J-D": "Anomalia"})
    .reset_index()
)

#1.2.1
def crear_tabla_frecuencia_por_periodo(df_anual, periodo, paso=0.05):
    bins = np.arange(-0.30, 1.10 + paso, paso) #Rangos de anomalia
    etiquetas = [f"{b:.2f}" for b in bins[:-1]]
    
    data = df_anual.loc[df_anual["Periodo"] == periodo, "Anomalia"].dropna() #Filtra por periodo
    
    categorias = pd.cut(data, bins=bins, labels=etiquetas, right=False) #Asocia las anomalias con los intervalos
    frecuencias = categorias.value_counts().reindex(etiquetas, fill_value=0) #Asegura que salgan todos los valores

    return pd.DataFrame({
        "Rango de anomalía (°C)": etiquetas,
        "Frecuencia": frecuencias.values
    })

tabla_1951_1980 = crear_tabla_frecuencia_por_periodo(anual, "1951-1980") #Recibe un dataframe, con un periodo.
tabla_1981_2010 = crear_tabla_frecuencia_por_periodo(anual, "1981-2010")
tabla_1981_2010

#1.2.2
#Graficas histogramas
periodos = {
    "1951–1980": tabla_1951_1980,
    "1981–2010": tabla_1981_2010
}

fig, axes = plt.subplots(ncols=2, figsize=(14,5), sharey=True)

for ax, (per, tabla) in zip(axes, periodos.items()):
    ax.bar(
        tabla["Rango de anomalía (°C)"],   # Eje X = intervalos
        tabla["Frecuencia"],               # Eje Y = frecuencias
        width=1.0, edgecolor="black"
    )
    ax.set_title(per)
    ax.set_xlabel("Anomalía (°C)")
    ax.grid(True, linestyle="--", alpha=0.6)   # Cuadrícula
    ax.tick_params(axis="x", rotation=90)      # Etiquetas giradas

axes[0].set_ylabel("Frecuencia")
fig.suptitle("Histogramas de frecuencia por período", fontsize=14)
plt.tight_layout()
plt.show()

#1.1.3
# Filtrar datos de 1951–1980 (columna J-D = promedio anual)
df_periodo1 = df.loc[1951:1980, "J-D"].dropna()

# Calcular deciles 3 y 7
q3 = np.quantile(df_periodo1, 0.3)  # tercio inferior
q7 = np.quantile(df_periodo1, 0.7)  # tercio superior

print(f"Decil 3 (1951–1980): {q3:.3f}")
print(f"Decil 7 (1951–1980): {q7:.3f}")



#1.2.4
df_periodo2 = df.loc[1981:2010, "J-D"].dropna()

# Contar cuántos son calientes (≥ q7)
n_total = len(df_periodo2)
n_calientes = (df_periodo2 >= 0.083).sum()
porcentaje_calientes = (n_calientes / n_total) * 100

print(f"Anomalías calientes (1981–2010): {n_calientes} de {n_total}")
print(f"Porcentaje de anomalías calientes: {porcentaje_calientes:.2f}%")



#1.2.5
periodos = {
    "1921-1950": (1921, 1950),
    "1951-1980": (1951, 1980),
    "1981-2010": (1981, 2010)
}

estaciones = ["DJF", "MAM", "JJA", "SON"]

# Crear tabla de resultados
resultados = {}

for nombre, (inicio, fin) in periodos.items():
    subset = df.loc[inicio:fin, estaciones].dropna()
    medias = subset.mean()
    varianzas = subset.var()
    resultados[nombre] = pd.DataFrame({
        "Media": medias,
        "Varianza": varianzas
    })

# Unir en una sola tabla
tabla_resultados = pd.concat(resultados, axis=1)
print(tabla_resultados.round(3))
